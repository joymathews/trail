AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Trail backend - Lambda (Express) + DynamoDB

Parameters:
  TableName:
    Type: String
    MinLength: 1
    Description: Name of the DynamoDB table
  CognitoUserPoolArn:
    Type: String
    MinLength: 1
    Description: ARN of the existing Cognito User Pool
  CognitoUserPoolId:
    Type: String
    MinLength: 1
    Description: ID of the existing Cognito User Pool
  CognitoUserPoolClientId:
    Type: String
    MinLength: 1
    Description: Client ID of the existing Cognito User Pool Client
  CorsAllowedOrigin:
    Type: String
    MinLength: 1
    Description: Allowed origin for CORS
  LambdaFunctionName:
    Type: String
    MinLength: 1
    Description: Name of the Lambda function

Resources:
  TrailHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: prod
      Name: TrailBackendApi
      CorsConfiguration:
        AllowOrigins:
          - !Ref CorsAllowedOrigin
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        AllowHeaders:
          - Authorization
          - Content-Type
        MaxAge: 600
      Auth:
        Authorizers:
          CognitoAuthorizer:
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              Audience:
                - !Ref CognitoUserPoolClientId
              Issuer: !Sub "https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPoolId}"
        DefaultAuthorizer: CognitoAuthorizer
      AccessLogSettings:
        DestinationArn: !GetAtt TrailApiAccessLogGroup.Arn
        Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","routeKey":"$context.routeKey","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength","user":"$context.authorizer.claims.sub"}'

  TrailApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/http-api/${TrailHttpApi}"
      RetentionInDays: 30

  TrailBackendLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      CodeUri: ./
      Handler: lambda.handler
      Runtime: nodejs22.x
      Timeout: 30
      Environment:
        Variables:
          TRAIL_DYNAMODB_TABLE: !Ref TrailDynamoDBTable
          TRAIL_AWS_REGION: !Ref AWS::Region
          TRAIL_CORS_ORIGIN: !Ref CorsAllowedOrigin
          TRAIL_IS_LOCAL: "false"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:*
              Resource: !GetAtt TrailDynamoDBTable.Arn
      Events:
        HealthEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref TrailHttpApi
            Path: /health
            Method: GET
          Auth:
            Authorizer: NONE
        OptionsEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref TrailHttpApi
            Path: /{proxy+}
            Method: OPTIONS
          Auth:
            Authorizer: NONE
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref TrailHttpApi
            Path: /{proxy+}
            Method: ANY

  TrailDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      AttributeDefinitions:
        - AttributeName: UserId
          AttributeType: S
        - AttributeName: SortKey
          AttributeType: S
      KeySchema:
        - AttributeName: UserId
          KeyType: HASH
        - AttributeName: SortKey
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

Outputs:
  DynamoDBTableName:
    Description: DynamoDB Table Name
    Value: !Ref TrailDynamoDBTable
  LambdaFunctionName:
    Description: Lambda function name
    Value: !Ref TrailBackendLambda
  HttpApiUrl:
    Description: HTTP API endpoint URL
    Value: !Sub 'https://${TrailHttpApi}.execute-api.${AWS::Region}.amazonaws.com/prod/'
