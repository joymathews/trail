name: Deploy Frontend to S3

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      TRAIL_AWS_COG_POOL_ID: ${{ secrets.TRAIL_AWS_COG_POOL_ID }}
      TRAIL_AWS_COG_POOL_CLIENT: ${{ secrets.TRAIL_AWS_COG_POOL_CLIENT }}
      TRAIL_AWS_API_URL: ${{ vars.TRAIL_AWS_API_URL }}
      TRAIL_AWS_OIDC_ROLE: ${{ secrets.TRAIL_AWS_OIDC_ROLE }}
      TRAIL_AWS_REGION: ${{ vars.TRAIL_AWS_REGION }}
      FRONTEND_BUCKET_NAME: ${{ vars.FRONTEND_BUCKET_NAME }}
    steps:
      - name: Check required secrets and variables
        run: |
          missing=0
          for var in TRAIL_AWS_COG_POOL_ID TRAIL_AWS_COG_POOL_CLIENT TRAIL_AWS_API_URL TRAIL_AWS_OIDC_ROLE TRAIL_AWS_REGION FRONTEND_BUCKET_NAME; do
            if [ -z "${!var}" ]; then
              echo "Missing required secret or variable: $var"
              missing=1
            fi
          done
          if [ "$missing" -eq 1 ]; then
            echo "One or more required secrets or variables are missing. Exiting."
            exit 1
          fi
        shell: bash
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        env:
          VITE_COGNITO_USER_POOL_ID: ${{ env.TRAIL_AWS_COG_POOL_ID }}
          VITE_COGNITO_CLIENT_ID: ${{ env.TRAIL_AWS_COG_POOL_CLIENT }}
          VITE_API_URL: ${{ env.TRAIL_AWS_API_URL }}
        run: |
          cd frontend
          npm run build

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.TRAIL_AWS_OIDC_ROLE }}
          aws-region: ${{ env.TRAIL_AWS_REGION }}

      - name: Sync assets to S3 with long cache
        run: |
          aws s3 sync frontend/dist s3://${{ env.FRONTEND_BUCKET_NAME }} \
            --exclude "index.html" \
            --delete \
            --cache-control "public, max-age=31536000, immutable"
          # Set correct content-type for JS files and preserve directory structure
          find frontend/dist -type f -name '*.js' | while read file; do
            key="${file#frontend/dist/}"
            aws s3 cp "$file" "s3://${{ env.FRONTEND_BUCKET_NAME }}/$key" \
              --cache-control "public, max-age=31536000, immutable" \
              --content-type "application/javascript"
          done

      - name: Upload index.html with short cache
        run: |
          aws s3 cp frontend/dist/index.html s3://${{ env.FRONTEND_BUCKET_NAME }}/index.html \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html"
