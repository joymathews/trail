name: Deploy Frontend Infra

on:
  push:
    paths:
      - 'infra/frontend/**'
      - '.github/workflows/deploy-frontend-infra.yml'
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: production
    env:
      AWS_OIDC_ROLE_ARN: ${{ secrets.AWS_OIDC_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      FRONTEND_BUCKET_NAME: ${{ secrets.FRONTEND_BUCKET_NAME }}
      FRONTEND_CLOUDFRONT_ALIAS_DOMAIN: ${{ secrets.FRONTEND_CLOUDFRONT_ALIAS_DOMAIN }}
      FRONTEND_CERTIFICATE_DOMAIN_NAME: ${{ secrets.FRONTEND_CERTIFICATE_DOMAIN_NAME }}
      FRONTEND_CERTIFICATE_SAN: ${{ secrets.FRONTEND_CERTIFICATE_SAN }}
      FRONTEND_HOSTED_ZONE_ID: ${{ secrets.FRONTEND_HOSTED_ZONE_ID }}
    defaults:
      run:
        working-directory: infra/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.3.0

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=frontend/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_STATE_LOCK_TABLE }}" \
            -backend-config="encrypt=true"

      - name: Terraform Plan
        run: terraform plan
        env:
          TF_VAR_bucket_name: ${{ env.FRONTEND_BUCKET_NAME }}
          TF_VAR_cloudfront_alias_domain: ${{ env.FRONTEND_CLOUDFRONT_ALIAS_DOMAIN }}
          TF_VAR_certificate_domain_name: ${{ env.FRONTEND_CERTIFICATE_DOMAIN_NAME }}
          TF_VAR_certificate_san: ${{ env.FRONTEND_CERTIFICATE_SAN }}
          TF_VAR_hosted_zone_id: ${{ env.FRONTEND_HOSTED_ZONE_ID }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_bucket_name: ${{ env.FRONTEND_BUCKET_NAME }}
          TF_VAR_cloudfront_alias_domain: ${{ env.FRONTEND_CLOUDFRONT_ALIAS_DOMAIN }}
          TF_VAR_certificate_domain_name: ${{ env.FRONTEND_CERTIFICATE_DOMAIN_NAME }}
          TF_VAR_certificate_san: ${{ env.FRONTEND_CERTIFICATE_SAN }}
          TF_VAR_hosted_zone_id: ${{ env.FRONTEND_HOSTED_ZONE_ID }}
